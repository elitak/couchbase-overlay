#!/sbin/runscript
#
# Copyright (c) 2010-2011, Couchbase, Inc.
# All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ERL_LIBS="$(echo /usr/lib/{ns_server,couchdb}/erlang/lib | tr " " ":"):/usr/lib/couchdb/plugins"
export ERL_LIBS
COUCHBASE_USER="couchbase"
DEFAULT_CONFIG_DIR="/etc/couchdb/default.d"
DEFAULT_CONFIG_FILE="/etc/couchdb/default.ini"
LOCAL_CONFIG_DIR="/etc/couchdb/local.d"
LOCAL_CONFIG_FILE="/etc/couchdb/local.ini"

PIDFILE="/run/couchbase-server.pid"
# TODO is this needed/used? -nocookie opt may render this moot
COOKIEFILE="/run/couchbase-server.cookie"

couch_start_arguments=""

LD_LIBRARY_PATH="/usr/lib/memcached":$LD_LIBRARY_PATH
export LD_LIBRARY_PATH

ERL_CRASH_DUMP=erl_crash.dump.$(date +%m-%d-%Y-%H:%M:%S).$$
export ERL_CRASH_DUMP

ERL_FULLSWEEP_AFTER=512
export ERL_FULLSWEEP_AFTER

# For some obscure reason erl requires HOME environment variable to be set.
if [ -z "$HOME" ]
then
    export HOME=/tmp
fi

_check_nofile () {
    ulimit -n 20480
    ulimit -c unlimited

    if [ `ulimit -n` -lt 10240 ]
    then
        cat <<EOF

The maximum number of open files for the couchbase user is set too low.
It must be at least 10240. Normally this can be increased by adding
the following lines to /etc/security/limits.conf:

couchbase              soft    nofile                  <value>
couchbase              hard    nofile                  <value>

Where <value> is greater than 10240.

EOF
    fi
}

_prepare_datadir () {
    datadir="/var/lib/couchbase"

    test -d "$datadir" || mkdir -p "$datadir"
    cd "$datadir"
}

_maybe_start_epmd () {
    # Initialize distributed erlang on the system (i.e. epmd)
    erl -noshell -setcookie nocookie -sname init -run init stop 2>&1 > /dev/null
    if [ $? -ne 0 ]
    then
        exit 1
    fi
}

_add_config_file () {
    couch_start_arguments="$couch_start_arguments $1"
}

_add_config_dir () {
    for file in "$1"/*.ini; do
        if [ -r "$file" ]; then
          _add_config_file "$file"
        fi
    done
}

_load_config () {
    _add_config_file "$DEFAULT_CONFIG_FILE"
    _add_config_dir "$DEFAULT_CONFIG_DIR"
    _add_config_file "$LOCAL_CONFIG_FILE"
    _add_config_dir "$LOCAL_CONFIG_DIR"
    if [ "$COUCHDB_ADDITIONAL_CONFIG_FILE" != '' ]
    then
        _add_config_file "$COUCHDB_ADDITIONAL_CONFIG_FILE"
    fi
}

start() {
    ebegin "Starting couchbase server"
    _check_nofile
    _prepare_datadir
    _maybe_start_epmd
    _load_config

    # Set an ENV variable to force C++ STL and string classes to not use its
    # default memory pooling allocator.
    # For GCC 3.2.2 and later
    GLIBCPP_FORCE_NEW=1
    export GLIBCPP_FORCE_NEW
    # For GCC 3.4 and later
    GLIBCXX_FORCE_NEW=1
    export GLIBCXX_FORCE_NEW

    touch $PIDFILE
    chown $COUCHBASE_USER:daemon $PIDFILE

    umask 007

    start-stop-daemon \
    --start \
    --background \
    --user ${COUCHBASE_USER} \
    --name beam \
    --exec erl -- \
        +A 16 \
        +c \
        +S 16:16 \
        -smp enable \
        -kernel inet_dist_listen_min 21100 \
                inet_dist_listen_max 21299 \
                error_logger false \
        -sasl sasl_error_logger false \
        -hidden \
        -noinput \
        -name 'babysitter_of_ns_1@127.0.0.1' \
        -setcookie nocookie \
        -run ns_babysitter_bootstrap -- \
            -couch_ini $couch_start_arguments \
            -ns_babysitter cookiefile "\"${COOKIEFILE}\"" \
            -ns_server pidfile "\"${PIDFILE}\"" \
            -ns_server config_path "\"/etc/couchbase/static_config\"" \
            -ns_server nodefile "\"/var/lib/couchbase/couchbase-server.node\"" \
            -ns_server enable_mlockall ${COUCHBASE_ENABLE_MLOCKALL:-true} \
            -ns_server cookiefile "\"${COOKIEFILE}\"" \
    2>&1 > /dev/null
}

stop() {
    ebegin "Stopping couchbase server"
    start-stop-daemon --stop --pidfile ${PIDFILE} --name beam
    rm -f ${COOKIEFILE}
    rm -f ${PIDFILE}
    epmd -kill >/dev/null
}

